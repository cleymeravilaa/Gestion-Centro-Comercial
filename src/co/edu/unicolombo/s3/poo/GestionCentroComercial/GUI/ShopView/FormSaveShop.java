
package co.edu.unicolombo.s3.poo.GestionCentroComercial.GUI.ShopView;

import co.edu.unicolombo.s3.poo.GestionCentroComercial.Business.Handlers.Commands.Shop.SaveShopCommandHandler;
import co.edu.unicolombo.s3.poo.GestionCentroComercial.Business.Handlers.Commands.Shop.UpdateShopCommandHandler;
import co.edu.unicolombo.s3.poo.GestionCentroComercial.Business.Handlers.Queries.Shop.GetAllShopQueryHandler;
import co.edu.unicolombo.s3.poo.GestionCentroComercial.Domain.Model.Shop;
import co.edu.unicolombo.s3.poo.GestionCentroComercial.GUI.PrincipalAdminVentana;
import co.edu.unicolombo.s3.poo.GestionCentroComercial.Infrastructure.Repositories.ShopRepository;
import java.awt.Color;
import java.awt.Toolkit;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JTextField;

/**
 *
 * @author CLEYMER
 */
public class FormSaveShop extends javax.swing.JPanel {

    /**
     * Creates new form fornShop
     */
    public FormSaveShop() {
        initComponents();
        var id = "";
        
        id = String.valueOf(ShopPanelManagement.shops.getLast().getId()+1);
        
        idField.setText(id);
    }

    public FormSaveShop(Shop shop){
        initComponents();
        String name = shop.getName();
        String id = String.valueOf(shop.getId());
        String category = shop.getCategory();
        String location = shop.getLocation();
        String renterPrice = String.valueOf(shop.getRentPrice());
        String area = String.valueOf(shop.getArea());
        String status = shop.getStatus();
        
        setFieldsWithData(id, name, category, area, location, renterPrice, status);
        
        titleLabel.setText("ACTUALIZAR DATOS LOCAL");
        
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        categoryField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        renterPrinceField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        areaField = new javax.swing.JTextField();
        btnSetRentalContract = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        idField = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        locationField = new javax.swing.JTextField();
        nameField = new javax.swing.JTextField();
        titleLabel = new javax.swing.JLabel();
        statusLabel = new javax.swing.JLabel();
        btnGoBack = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        btnCancel = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setForeground(new java.awt.Color(0, 0, 0));
        setMinimumSize(new java.awt.Dimension(687, 469));
        setPreferredSize(new java.awt.Dimension(687, 469));

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText("CATEGORIA");

        categoryField.setFont(new java.awt.Font("Roboto Mono", 0, 12)); // NOI18N
        categoryField.setForeground(new java.awt.Color(0, 0, 0));
        categoryField.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(193, 173, 212)));
        categoryField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                categoryFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                categoryFieldFocusLost(evt);
            }
        });

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("PRECIO RENTA");

        renterPrinceField.setFont(new java.awt.Font("Roboto Mono", 0, 12)); // NOI18N
        renterPrinceField.setForeground(new java.awt.Color(0, 0, 0));
        renterPrinceField.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(193, 173, 212)));
        renterPrinceField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                renterPrinceFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                renterPrinceFieldFocusLost(evt);
            }
        });
        renterPrinceField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                renterPrinceFieldKeyTyped(evt);
            }
        });

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("AREA");

        areaField.setFont(new java.awt.Font("Roboto Mono", 0, 12)); // NOI18N
        areaField.setForeground(new java.awt.Color(0, 0, 0));
        areaField.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(193, 173, 212)));
        areaField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                areaFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                areaFieldFocusLost(evt);
            }
        });
        areaField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                areaFieldKeyTyped(evt);
            }
        });

        btnSetRentalContract.setBackground(new java.awt.Color(177, 133, 219));
        btnSetRentalContract.setFont(new java.awt.Font("Roboto Mono", 0, 12)); // NOI18N
        btnSetRentalContract.setForeground(new java.awt.Color(255, 255, 255));
        btnSetRentalContract.setText("Establecer Contrato");
        btnSetRentalContract.setBorder(null);
        btnSetRentalContract.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnSetRentalContract.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSetRentalContractActionPerformed(evt);
            }
        });

        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel6.setText("ID");

        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel7.setText("NOMBRE");

        idField.setEditable(false);
        idField.setFont(new java.awt.Font("Roboto Mono", 0, 12)); // NOI18N
        idField.setForeground(new java.awt.Color(108, 117, 125));
        idField.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(193, 173, 212)));
        idField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                idFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                idFieldFocusLost(evt);
            }
        });

        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel8.setText("UBICACIÃ“N");

        locationField.setFont(new java.awt.Font("Roboto Mono", 0, 12)); // NOI18N
        locationField.setForeground(new java.awt.Color(0, 0, 0));
        locationField.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(193, 173, 212)));
        locationField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                locationFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                locationFieldFocusLost(evt);
            }
        });

        nameField.setFont(new java.awt.Font("Roboto Mono", 0, 12)); // NOI18N
        nameField.setForeground(new java.awt.Color(0, 0, 0));
        nameField.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(193, 173, 212)));
        nameField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                nameFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                nameFieldFocusLost(evt);
            }
        });

        titleLabel.setFont(new java.awt.Font("Roboto Mono", 1, 18)); // NOI18N
        titleLabel.setForeground(new java.awt.Color(0, 0, 0));
        titleLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titleLabel.setText("REGISTRO DE LOCALES");

        statusLabel.setFont(new java.awt.Font("Roboto Mono", 1, 12)); // NOI18N
        statusLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        statusLabel.setText("ESTADO: ");
        statusLabel.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        btnGoBack.setBackground(new java.awt.Color(177, 133, 219));
        btnGoBack.setFont(new java.awt.Font("Roboto Mono", 0, 12)); // NOI18N
        btnGoBack.setForeground(new java.awt.Color(255, 255, 255));
        btnGoBack.setText("Regresar");
        btnGoBack.setBorder(null);
        btnGoBack.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnGoBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGoBackActionPerformed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(102, 0, 204));
        jPanel1.setPreferredSize(new java.awt.Dimension(350, 469));

        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/co/edu/unicolombo/s3/poo/GestionCentroComercial/GUI/Images/registrarLocales.png"))); // NOI18N
        jLabel9.setText("jLabel9");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 352, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(121, 121, 121)
                .addComponent(jLabel9)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btnCancel.setBackground(new java.awt.Color(177, 133, 219));
        btnCancel.setFont(new java.awt.Font("Roboto Mono", 0, 12)); // NOI18N
        btnCancel.setForeground(new java.awt.Color(255, 255, 255));
        btnCancel.setText("Cancelar");
        btnCancel.setBorder(null);
        btnCancel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        btnSave.setBackground(new java.awt.Color(177, 133, 219));
        btnSave.setFont(new java.awt.Font("Roboto Mono", 0, 12)); // NOI18N
        btnSave.setForeground(new java.awt.Color(255, 255, 255));
        btnSave.setText("Guardar");
        btnSave.setBorder(null);
        btnSave.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 352, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(titleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 337, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(107, 107, 107))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(58, 58, 58)
                                .addComponent(btnGoBack, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(48, 48, 48)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(statusLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(btnSetRentalContract, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(50, 50, 50)
                                        .addComponent(idField, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(50, 50, 50)
                                        .addComponent(nameField, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(50, 50, 50)
                                        .addComponent(locationField, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(50, 50, 50)
                                        .addComponent(categoryField, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(50, 50, 50)
                                        .addComponent(renterPrinceField, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(50, 50, 50)
                                        .addComponent(areaField, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addContainerGap(45, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(titleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(idField, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nameField, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(locationField, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(categoryField, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(renterPrinceField, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(areaField, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(statusLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSetRentalContract, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(92, 92, 92)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnGoBack, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 612, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnGoBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGoBackActionPerformed
        ShopPanelManagement panel = new ShopPanelManagement();
        PrincipalAdminVentana.showJPanel(panel);
    }//GEN-LAST:event_btnGoBackActionPerformed

    private void categoryFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_categoryFieldFocusGained
        // TODO add your handling code here:
        resetColorField(categoryField);
    }//GEN-LAST:event_categoryFieldFocusGained

    private void categoryFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_categoryFieldFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_categoryFieldFocusLost

    private void renterPrinceFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_renterPrinceFieldFocusGained
        // TODO add your handling code here:
        resetColorField(renterPrinceField);
    }//GEN-LAST:event_renterPrinceFieldFocusGained

    private void renterPrinceFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_renterPrinceFieldFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_renterPrinceFieldFocusLost

    private void areaFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_areaFieldFocusGained
        // TODO add your handling code here:
        resetColorField(areaField);
    }//GEN-LAST:event_areaFieldFocusGained

    private void areaFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_areaFieldFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_areaFieldFocusLost

    private void btnSetRentalContractActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSetRentalContractActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnSetRentalContractActionPerformed

    private void idFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_idFieldFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_idFieldFocusGained

    private void idFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_idFieldFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_idFieldFocusLost

    private void locationFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_locationFieldFocusGained
        // TODO add your handling code here:
        resetColorField(locationField);
    }//GEN-LAST:event_locationFieldFocusGained

    private void locationFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_locationFieldFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_locationFieldFocusLost

    private void nameFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_nameFieldFocusGained
        resetColorField(nameField);
    }//GEN-LAST:event_nameFieldFocusGained

    private void nameFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_nameFieldFocusLost
        // TODO add your handling code here:
        // nameField.setBackground(Color.red);
    }//GEN-LAST:event_nameFieldFocusLost

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        // TODO add your handling code here:
         Object[] options = {"Aceptar", "Cancelar"};
         
        int result = JOptionPane.showConfirmDialog(this, "Â¿Estas Seguro?" 
                 ,"ConfirmaciÃ³n", JOptionPane.YES_NO_OPTION, 
                 JOptionPane.QUESTION_MESSAGE, null);
         
        if (result==JOptionPane.YES_OPTION) {
            ShopPanelManagement panel = new ShopPanelManagement();
            PrincipalAdminVentana.showJPanel(panel);
        }
    }//GEN-LAST:event_btnCancelActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:
        if (!validateField(nameField, "Digite el nombre")) {
            return;
        }
        if (!validateField(locationField, "Digite la UbicaciÃ³n")) {
            return;
        }
        
        if (!validateField(categoryField, "Digit la categoria")) {
            return;
        }
        if (!validateField(renterPrinceField, "Digite el precio de la renta")) {
            return;
        }
        if (!validateField(areaField, "Digite el area")) {
            return;
        }
        
        String name = nameField.getText();
        String location = locationField.getText();
        String category = categoryField.getText();
  
        
        double renterPrice = Double.parseDouble(renterPrinceField.getText());
        double area = Double.parseDouble(areaField.getText());
        

        if (area<=0 || renterPrice<=0) {
            areaField.setBackground(new Color(0xC1ADD4));
            renterPrinceField.setBackground(new Color(0xC1ADD4));
            JOptionPane.showMessageDialog(this, "Los valores deben ser positivos", "Validar", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        ShopRepository repository = new ShopRepository();
        
        if (titleLabel.getText().equalsIgnoreCase("REGISTRO DE LOCALES")) {
            SaveShopCommandHandler handler = new SaveShopCommandHandler(repository);
            Shop savingShop = new Shop(name, category, area, location, renterPrice, "Desocupado");
            try {
                handler.save(savingShop);
                
                if (handler.save(savingShop)==null) {
                    JOptionPane.showMessageDialog(null, "No fue posible realizar el registro por que ya existe un registro con tal nombre");
                    clearFields();
                    return;
                }
                JOptionPane.showMessageDialog(null, "SE REALIZO CON EXITO EL REGISTRO");
                clearFields();
                GetAllShopQueryHandler h = new GetAllShopQueryHandler(repository);

                ShopPanelManagement.shops = h.getAllShop();
                idField.setText(String.valueOf(ShopPanelManagement.shops.getLast().getId()+1));
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null, "NO FUE POSIBLE REALIZAR EL REGISTRO: "+ ex.getMessage());
            }

        } else {
            UpdateShopCommandHandler handler = new UpdateShopCommandHandler(repository);
           
            Shop savingShop = new Shop(name, category, area, location, renterPrice, ShopPanelManagement.currentShop.getStatus());

            
            savingShop.setId(Integer.valueOf(idField.getText()));
            System.out.println(savingShop);
            System.out.println(ShopPanelManagement.currentShop);
            if (isEqualsShopObjects(savingShop)) {
                JOptionPane.showMessageDialog(null, "DEBE CAMBIAR ALGUN ATRIBUTO");
                return;
            }
            try{
                handler.updateShop(savingShop);
                JOptionPane.showMessageDialog(null, "SE ACTUALIZO CON EXITO EL REGISTRO");
                clearFields();
                GetAllShopQueryHandler h = new GetAllShopQueryHandler(repository);

                
                ShopPanelManagement.shops = h.getAllShop();
                ShopPanelManagement panel = new ShopPanelManagement();
                PrincipalAdminVentana.showJPanel(panel);
            } catch(Exception ex){
                JOptionPane.showMessageDialog(null, "NO FUE POSIBLE REALIZAR EL UPDATE: "+ ex.getMessage());
            }
        }
        
        
        

    }//GEN-LAST:event_btnSaveActionPerformed

    private void renterPrinceFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_renterPrinceFieldKeyTyped
        char tecla = evt.getKeyChar();
        if(!Character.isDigit(tecla)) {
            evt.consume();
            Toolkit toolkit = Toolkit.getDefaultToolkit();

            // Reproduce el sonido del sistema "Beep"
            toolkit.beep();
        }
    }//GEN-LAST:event_renterPrinceFieldKeyTyped

    private void areaFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_areaFieldKeyTyped
        char tecla = evt.getKeyChar();
        if(!Character.isDigit(tecla)) {
            evt.consume();
            Toolkit toolkit = Toolkit.getDefaultToolkit();

            // Reproduce el sonido del sistema "Beep"
            toolkit.beep();
        }
    }//GEN-LAST:event_areaFieldKeyTyped

    private boolean validateField(JTextField textField, String message) {
        String dato = textField.getText();
        dato = dato.trim();
        if(dato.isEmpty()) {
            // textField.requestFocus();
            textField.setBackground(new Color(0xC1ADD4));
            JOptionPane.showMessageDialog(this, message, "Validar", JOptionPane.ERROR_MESSAGE);
            return false;
        }
        return true;
    }
    
    private void resetColorField (JTextField field) {
        field.setBackground(Color.WHITE);
    }
    
    private void clearFields(){
        locationField.setText("");
        nameField.setText("");
        renterPrinceField.setText("");
        areaField.setText("");
        categoryField.setText("");
    }
    
    private void setFieldsWithData(String id, String name, String category, 
                                    String area, String location, String renterPrice, String status){
        idField.setText(id);
        nameField.setText(name);
        categoryField.setText(category);
        areaField.setText(area);
        locationField.setText(location);
        renterPrinceField.setText(renterPrice);
        System.out.println(jLabel9.getText() + status);
        statusLabel.setText("ESTADO: " + status.toUpperCase());
    }
    
    private boolean isEqualsShopObjects(Shop comparingShop){
        Shop currentShop = ShopPanelManagement.currentShop;
        
        if (currentShop.getName().equalsIgnoreCase(comparingShop.getName())
                && currentShop.getCategory().equalsIgnoreCase(comparingShop.getCategory())
                && currentShop.getLocation().equalsIgnoreCase(comparingShop.getLocation())
                && currentShop.getArea() == comparingShop.getArea()
                && currentShop.getStatus().equalsIgnoreCase(comparingShop.getStatus())
                && currentShop.getRentPrice() == comparingShop.getRentPrice()) {
           
            return true;
        }
        return false;
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField areaField;
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnGoBack;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnSetRentalContract;
    private javax.swing.JTextField categoryField;
    private javax.swing.JTextField idField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField locationField;
    private javax.swing.JTextField nameField;
    private javax.swing.JTextField renterPrinceField;
    private javax.swing.JLabel statusLabel;
    private javax.swing.JLabel titleLabel;
    // End of variables declaration//GEN-END:variables
}
