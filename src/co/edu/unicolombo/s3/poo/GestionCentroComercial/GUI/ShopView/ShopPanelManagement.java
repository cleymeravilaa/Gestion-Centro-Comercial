package co.edu.unicolombo.s3.poo.GestionCentroComercial.GUI.ShopView;

import co.edu.unicolombo.s3.poo.GestionCentroComercial.Business.Handlers.Queries.Shop.GetAllShopQueryHandler;
import co.edu.unicolombo.s3.poo.GestionCentroComercial.Business.Handlers.Queries.Shop.GetShopQueryHandler;
import co.edu.unicolombo.s3.poo.GestionCentroComercial.Domain.Model.Shop;
import co.edu.unicolombo.s3.poo.GestionCentroComercial.GUI.PrincipalAdminVentana;
import co.edu.unicolombo.s3.poo.GestionCentroComercial.Infrastructure.Repositories.ShopRepository;
import java.awt.Color;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;



/**
 *
 * @author CLEYMER
 */
public class ShopPanelManagement extends javax.swing.JPanel {
    
    
    public static List<Shop> shops= new ArrayList<>();
    
    public static Shop currentShop;

    /**
     * Creates new form ShopPanelManagement
     */
    public ShopPanelManagement() {
        initComponents();  
        try {
            initializeShops();
        } catch (Exception ex) {
            System.out.println("Error: "+ ex);
        }
        populateTable(shops);
        initInfoPanel();
        setButtonsEnabled(true, true, false, false, false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        deleteShopBtn = new javax.swing.JButton();
        addShopBtn = new javax.swing.JButton();
        searchBtn = new javax.swing.JButton();
        editShopBtn = new javax.swing.JButton();
        searchField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        info1Label = new javax.swing.JLabel();
        info2Label = new javax.swing.JLabel();
        infoLabel3 = new javax.swing.JLabel();
        infoLabel4 = new javax.swing.JLabel();
        shopOccupiedsLabel = new javax.swing.JLabel();
        shopsMaintenancesLabel = new javax.swing.JLabel();
        shopUnoccupiedsLabel1 = new javax.swing.JLabel();
        totalShopsLabel = new javax.swing.JLabel();
        btnDetails = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setPreferredSize(new java.awt.Dimension(687, 469));

        deleteShopBtn.setBackground(new java.awt.Color(204, 204, 204));
        deleteShopBtn.setFont(new java.awt.Font("Roboto Mono", 0, 12)); // NOI18N
        deleteShopBtn.setForeground(new java.awt.Color(0, 0, 0));
        deleteShopBtn.setText("Eliminar");
        deleteShopBtn.setBorder(null);
        deleteShopBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        deleteShopBtn.setPreferredSize(new java.awt.Dimension(72, 23));
        deleteShopBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteShopBtnActionPerformed(evt);
            }
        });

        addShopBtn.setBackground(new java.awt.Color(177, 133, 219));
        addShopBtn.setFont(new java.awt.Font("Roboto Mono", 0, 12)); // NOI18N
        addShopBtn.setForeground(new java.awt.Color(255, 255, 255));
        addShopBtn.setText("Agregar");
        addShopBtn.setBorder(null);
        addShopBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        addShopBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addShopBtnActionPerformed(evt);
            }
        });

        searchBtn.setBackground(new java.awt.Color(177, 133, 219));
        searchBtn.setFont(new java.awt.Font("Roboto Mono", 0, 12)); // NOI18N
        searchBtn.setForeground(new java.awt.Color(255, 255, 255));
        searchBtn.setText("Buscar");
        searchBtn.setBorder(null);
        searchBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        searchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBtnActionPerformed(evt);
            }
        });

        editShopBtn.setBackground(new java.awt.Color(204, 204, 204));
        editShopBtn.setFont(new java.awt.Font("Roboto Mono", 0, 12)); // NOI18N
        editShopBtn.setForeground(new java.awt.Color(0, 0, 0));
        editShopBtn.setText("Editar");
        editShopBtn.setBorder(null);
        editShopBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        editShopBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editShopBtnActionPerformed(evt);
            }
        });

        searchField.setFont(new java.awt.Font("Roboto Mono", 0, 12)); // NOI18N
        searchField.setForeground(new java.awt.Color(108, 117, 125));
        searchField.setText("Busca por Id o por nombre");
        searchField.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(193, 173, 212)));
        searchField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                searchFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                searchFieldFocusLost(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Roboto Mono", 0, 12)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText("Filtrar Por:");

        jComboBox1.setBackground(new java.awt.Color(255, 255, 255));
        jComboBox1.setFont(new java.awt.Font("Roboto Mono", 0, 12)); // NOI18N
        jComboBox1.setForeground(new java.awt.Color(0, 0, 0));
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Todos", "Ocupados", "Desocupados", "En Mantenimiento" }));
        jComboBox1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(193, 173, 212), 1, true));
        jComboBox1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jComboBox1FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jComboBox1FocusLost(evt);
            }
        });
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        jTable1.setFont(new java.awt.Font("Roboto Mono", 0, 12)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTable1.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_NEXT_COLUMN);
        jTable1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jTable1.setName("Locales"); // NOI18N
        jTable1.setRowHeight(22);
        jTable1.setSelectionBackground(new java.awt.Color(177, 133, 219));
        jTable1.setSelectionForeground(new java.awt.Color(255, 255, 255));
        jTable1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jTable1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jTable1.setShowGrid(false);
        jTable1.getTableHeader().setResizingAllowed(false);
        jTable1.getTableHeader().setReorderingAllowed(false);
        jTable1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTable1FocusLost(evt);
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTable1MousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Informaci√≥n General", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Roboto Mono SemiBold", 0, 12), new java.awt.Color(177, 133, 219))); // NOI18N

        info1Label.setFont(new java.awt.Font("Roboto Mono SemiBold", 1, 12)); // NOI18N
        info1Label.setText("Locales Ocupados: ");

        info2Label.setFont(new java.awt.Font("Roboto Mono SemiBold", 1, 12)); // NOI18N
        info2Label.setText("Locales Desocupados: ");

        infoLabel3.setFont(new java.awt.Font("Roboto Mono SemiBold", 1, 12)); // NOI18N
        infoLabel3.setText("Locales en Mant: ");

        infoLabel4.setFont(new java.awt.Font("Roboto Mono SemiBold", 1, 12)); // NOI18N
        infoLabel4.setText("Locales Totales: ");

        shopOccupiedsLabel.setFont(new java.awt.Font("Roboto Mono", 1, 12)); // NOI18N
        shopOccupiedsLabel.setText("label1");

        shopsMaintenancesLabel.setFont(new java.awt.Font("Roboto Mono", 1, 12)); // NOI18N
        shopsMaintenancesLabel.setText("label1");

        shopUnoccupiedsLabel1.setFont(new java.awt.Font("Roboto Mono", 1, 12)); // NOI18N
        shopUnoccupiedsLabel1.setText("label1");

        totalShopsLabel.setFont(new java.awt.Font("Roboto Mono", 1, 12)); // NOI18N
        totalShopsLabel.setText("label1");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(infoLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(totalShopsLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(info1Label)
                        .addGap(18, 18, 18)
                        .addComponent(shopOccupiedsLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(infoLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(shopsMaintenancesLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(info2Label)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(shopUnoccupiedsLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(13, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(info1Label)
                    .addComponent(shopOccupiedsLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(info2Label)
                    .addComponent(shopUnoccupiedsLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(infoLabel3)
                    .addComponent(shopsMaintenancesLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(infoLabel4)
                    .addComponent(totalShopsLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btnDetails.setBackground(new java.awt.Color(204, 204, 204));
        btnDetails.setFont(new java.awt.Font("Roboto Mono", 0, 12)); // NOI18N
        btnDetails.setForeground(new java.awt.Color(0, 0, 0));
        btnDetails.setText("Ver Detalles");
        btnDetails.setBorder(null);
        btnDetails.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnDetails.setMaximumSize(new java.awt.Dimension(72, 23));
        btnDetails.setMinimumSize(new java.awt.Dimension(72, 23));
        btnDetails.setPreferredSize(new java.awt.Dimension(72, 23));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(searchBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(34, 34, 34)
                        .addComponent(searchField, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(49, 49, 49)
                        .addComponent(addShopBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(editShopBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(22, 22, 22)
                        .addComponent(deleteShopBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnDetails, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 553, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(36, 36, 36)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(4, 4, 4)
                                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(28, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(searchField, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(editShopBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(addShopBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(deleteShopBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnDetails, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE))
                        .addGap(31, 31, 31)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(144, 144, 144))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 448, Short.MAX_VALUE)
                        .addGap(41, 41, 41))))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBox1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jComboBox1FocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1FocusGained

    private void jComboBox1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jComboBox1FocusLost
        // TODO add your handling code here:
        this.jComboBox1.setBackground(new Color(0xFFFFFF));
        this.jComboBox1.setForeground(new Color(0x000000));
    }//GEN-LAST:event_jComboBox1FocusLost

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
        String status = jComboBox1.getSelectedItem().toString();
        List<Shop> filterShops = filterShopsByStatus(status);
        
        populateTable(filterShops);
        
        
        this.jComboBox1.setBackground(new Color(0xC1ADD4));
        this.jComboBox1.setForeground(new Color(0xFFFFFF));
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void searchFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_searchFieldFocusLost
        // TODO add your handling code here:
        // this.searchField.setText("Busca por Id");
        this.searchField.setForeground(new Color(0x6c757d));
    }//GEN-LAST:event_searchFieldFocusLost

    private void searchFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_searchFieldFocusGained
        // TODO add your handling code here:
        this.searchField.setText("");
        this.searchField.setForeground(Color.BLACK);
    }//GEN-LAST:event_searchFieldFocusGained

    private void jTable1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTable1FocusLost
        try {
            initializeShops();
        } catch (Exception ex) {
            Logger.getLogger(ShopPanelManagement.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        System.out.println("Foco perdido ahora ahora");
    }//GEN-LAST:event_jTable1FocusLost

    private void searchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBtnActionPerformed
        ShopRepository repository = new ShopRepository();
        
        GetShopQueryHandler handler = new GetShopQueryHandler(repository);
        
        String textFromField = searchField.getText();
        
        var id = -1;
        var name = "";
        if (!textFromField.isEmpty() && !textFromField.equalsIgnoreCase("Busca por Id o por nombre")) {
            try {
                id = Integer.parseInt(textFromField.trim());
                id = (id < 0) ? -1 : id;
            } catch (NumberFormatException | ArithmeticException e) {
                // JOptionPane.showMessageDialog(this, "El Valor ingresado no es valido!");
                name = textFromField.trim();
                searchField.setText("");
                id = -10;
            }
            
            if (id==-1) {
                JOptionPane.showMessageDialog(this, "El valor no puede ser negativo");
                searchField.setText("");

                return;
            }
        } else {
            
                setButtonsEnabled(true, true, false, false, false);
                resetColorsAddEditDetailBtn();
        }
        
        if (id!=-1 && name.equalsIgnoreCase("")) {
            
            try {
                var shop = handler.getShop(id);
                JOptionPane.showMessageDialog(this, "El Local "+ shop.getName()+ " ha sido encontrado con exito"
                        + "\nPuede seleccionar opciones disponibles");
                searchField.setText("");
                setButtonsEnabled(true, true, true, true, true);
                changeColorsAddEditDetailBtrn();
                currentShop = shop;
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, "El local no ha sido encontrado \npor lo que no existe en nuestra base de datos");
                searchField.setText("");
                setButtonsEnabled(true, true, false, false, false);
                resetColorsAddEditDetailBtn();
            }          
        }
        
        if (!name.equals("")) {
                        try {
                var shop = handler.getShop(name);
                JOptionPane.showMessageDialog(this, "El Local "+ shop.getName()+ " ha sido encontrado con exito"
                        + "\nPuede seleccionar opciones disponibles");
                searchField.setText("");
                setButtonsEnabled(true, true, true, true, true);
                changeColorsAddEditDetailBtrn();
                currentShop = shop;
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, "El local no ha sido encontrado \npor lo que no existe en nuestra base de datos");
                searchField.setText("");
                setButtonsEnabled(true, true, false, false, false);
                resetColorsAddEditDetailBtn();
            }   
        }
        
        jTable1.clearSelection();
    }//GEN-LAST:event_searchBtnActionPerformed

    private void addShopBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addShopBtnActionPerformed
        FormSaveShop form = new FormSaveShop();
        PrincipalAdminVentana.showJPanel(form);
    }//GEN-LAST:event_addShopBtnActionPerformed

    private void editShopBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editShopBtnActionPerformed
        FormSaveShop form = new FormSaveShop(currentShop);
        PrincipalAdminVentana.showJPanel(form);
    }//GEN-LAST:event_editShopBtnActionPerformed

    private void deleteShopBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteShopBtnActionPerformed
        DeleteShopDialog dialgog = new DeleteShopDialog(null, true);
        dialgog.setLocationRelativeTo(this.getRootPane());
        dialgog.setVisible(true);
    }//GEN-LAST:event_deleteShopBtnActionPerformed

    private void jTable1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MousePressed
        int row = jTable1.rowAtPoint(evt.getPoint());
        

        // Verifica si se ha hecho clic en una fila v√°lida
        String[] data = new String[jTable1.getColumnCount()];
        if (row >= 0) {
            // Obtener todos los valores de la fila seleccionada
            int columnCount = jTable1.getColumnCount();
            StringBuilder rowData = new StringBuilder("Datos de la fila seleccionada: ");
            data = new String[columnCount];
            
            for (int col = 0; col < columnCount; col++) {
                Object value = jTable1.getValueAt(row, col);
                data[col] = value.toString();
                rowData.append(value).append(" ");
            }

            System.out.println(rowData.toString().trim());

            
        }
        
        Shop selectedShop = new Shop();
        
        selectedShop.setId(Integer.parseInt(data[0]));
        selectedShop.setName(data[1]);
        selectedShop.setCategory(data[2]);
        selectedShop.setArea(Double.parseDouble(data[3]));
        selectedShop.setLocation(data[4]);
        selectedShop.setRentPrice(Double.parseDouble(data[5]));
        selectedShop.setStatus(data[6]);
        
        currentShop = selectedShop;
        
        setButtonsEnabled(true, true, true, true, true);

        changeColorsAddEditDetailBtrn();
    }//GEN-LAST:event_jTable1MousePressed

    // M√©todo para inicializar 20 objetos Shop y a√±adirlos a la lista
    private static void initializeShops() throws Exception {
        ShopRepository repository = new ShopRepository();
        
        GetAllShopQueryHandler handler = new GetAllShopQueryHandler(repository);
        shops = handler.getAllShop();
    }
    
    public static void updateTableAndInfo(){
        ShopRepository repository = new ShopRepository();
        
        GetAllShopQueryHandler handler = new GetAllShopQueryHandler(repository);
        

        try {
            initializeShops();
        } catch (Exception ex) {
            Logger.getLogger(ShopPanelManagement.class.getName()).log(Level.SEVERE, null, ex);
        }
        populateTable(shops);
        initInfoPanel();
    }
    
    // M√©todo para llenar el JTable con los datos del ArrayList
    private static  void populateTable(List<Shop> shops) {
        // Definir los nombres de las columnas
        String[] columnNames = {"ID", "Nombre", "Categor√≠a", "√Årea", "Ubicaci√≥n", "Precio Renta", "Estado"};
        
        // Crear el modelo de la tabla
        DefaultTableModel model = new DefaultTableModel(columnNames, 0){
            @Override
            public boolean isCellEditable(int row, int colum){
                return false;
            }
        };
        
        // Llenar el modelo con los datos de cada Shop en el ArrayList
        for (Shop shop : shops) {
            Object[] row = {
                shop.getId(),
                shop.getName(),
                shop.getCategory(),
                shop.getArea(),
                shop.getLocation(),
                shop.getRentPrice(),
                shop.getStatus()
            };
            model.addRow(row);
        }
        
        // Asignar el modelo al JTable
        jTable1.setModel(model); 
        resetColorsAddEditDetailBtn();
        setButtonsEnabled(true, true, false, false, false);
    }
    
    private List<Shop> filterShopsByStatus(String status){
        
        List<Shop> filterShops;
        
        if (status.equalsIgnoreCase("Todos")) {
            return this.shops;
        }
        
        if (status.equals("En Mantenimiento")) {
            String finalStatus = "Mantenimiento";
            filterShops = this.shops.stream().filter(s -> s.getStatus()
                    .equalsIgnoreCase(finalStatus))
                    .toList();
            
            return filterShops;
        }
        filterShops =  this.shops.stream().filter(s -> s.getStatus()
                .concat("s").equalsIgnoreCase(status)).toList();
        
        return filterShops;
    }

    private static void initInfoPanel(){
        int numberUnoccupiedShops = 0;
        int numberOccupiedShops = 0;
        int numberInMaintenanceShops = 0;
        
        for(Shop shop: shops){
            
            if(shop.getStatus().equalsIgnoreCase("Ocupado")){
                numberOccupiedShops++;
            } else if(shop.getStatus().equalsIgnoreCase("Desocupado")){
                numberUnoccupiedShops++;
            } else {
                numberInMaintenanceShops++;
            }
        }
                    

        
        // Establecer los valores del panel informaci√≥n
        shopOccupiedsLabel.setText(String.valueOf(numberOccupiedShops));
        shopUnoccupiedsLabel1.setText(String.valueOf(numberUnoccupiedShops));
        shopsMaintenancesLabel.setText(String.valueOf(numberInMaintenanceShops));
        totalShopsLabel.setText(String.valueOf(shops.size()));
        
    }
    
    public static void setButtonsEnabled(boolean btnSearchEnabled, boolean  btnAddEnabled,
        boolean btnEditEnabled, boolean btnDeleteEnabled, boolean btnDetailsEnabled){
        searchBtn.setEnabled(btnSearchEnabled);
        addShopBtn.setEnabled(btnAddEnabled);
        editShopBtn.setEnabled(btnEditEnabled);
        deleteShopBtn.setEnabled(btnDeleteEnabled);
        btnDetails.setEnabled(btnDetailsEnabled);
        
    }
    
    public static void changeColorsAddEditDetailBtrn(){
        editShopBtn.setBackground(new Color(0xB185DB));
        editShopBtn.setForeground(new Color(0xFFFFFF));

        deleteShopBtn.setBackground(new Color(0xB185DB));
        deleteShopBtn.setForeground(new Color(0xFFFFFF));

        btnDetails.setBackground(new Color(0xB185DB));
        btnDetails.setForeground(new Color(0xFFFFFF));
    }
    
    public static void resetColorsAddEditDetailBtn(){
        editShopBtn.setBackground(new Color(0xCCCCCC));
        editShopBtn.setForeground(new Color(0x000000));

        deleteShopBtn.setBackground(new Color(0xCCCCCC));
        deleteShopBtn.setForeground(new Color(0x000000));
        btnDetails.setBackground(new Color(0xCCCCCC));
        btnDetails.setForeground(new Color(0x000000));
        
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JButton addShopBtn;
    public static javax.swing.JButton btnDetails;
    public static javax.swing.JButton deleteShopBtn;
    public static javax.swing.JButton editShopBtn;
    private static javax.swing.JLabel info1Label;
    private static javax.swing.JLabel info2Label;
    private static javax.swing.JLabel infoLabel3;
    private static javax.swing.JLabel infoLabel4;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    public static javax.swing.JTable jTable1;
    public static javax.swing.JButton searchBtn;
    private javax.swing.JTextField searchField;
    private static javax.swing.JLabel shopOccupiedsLabel;
    private static javax.swing.JLabel shopUnoccupiedsLabel1;
    private static javax.swing.JLabel shopsMaintenancesLabel;
    private static javax.swing.JLabel totalShopsLabel;
    // End of variables declaration//GEN-END:variables
}
